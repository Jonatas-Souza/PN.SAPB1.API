// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PN.SAPB1.API.Context;

#nullable disable

namespace PN.SAPB1.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240817184026_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PN.SAPB1.API.Models.Bpaddress", b =>
                {
                    b.Property<string>("BPCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressName3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingFloorRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FederalTaxID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BPCode", "AddressName");

                    b.ToTable("Bpaddresses");
                });

            modelBuilder.Entity("PN.SAPB1.API.Models.Bpfiscaltaxidcollection", b =>
                {
                    b.Property<string>("BPCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AToRetrNFe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddrType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CNAECode")
                        .HasColumnType("int");

                    b.Property<string>("TaxId0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BPCode", "Address");

                    b.ToTable("Bpfiscaltaxidcollections");
                });

            modelBuilder.Entity("PN.SAPB1.API.Models.BusinessPartners", b =>
                {
                    b.Property<string>("CardCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardCode");

                    b.ToTable("BusinessPartners");
                });

            modelBuilder.Entity("PN.SAPB1.API.Models.Bpaddress", b =>
                {
                    b.HasOne("PN.SAPB1.API.Models.BusinessPartners", "BusinessPartner")
                        .WithMany("BPAddresses")
                        .HasForeignKey("BPCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPartner");
                });

            modelBuilder.Entity("PN.SAPB1.API.Models.Bpfiscaltaxidcollection", b =>
                {
                    b.HasOne("PN.SAPB1.API.Models.BusinessPartners", "BusinessPartner")
                        .WithMany("BPFiscalTaxIDCollection")
                        .HasForeignKey("BPCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessPartner");
                });

            modelBuilder.Entity("PN.SAPB1.API.Models.BusinessPartners", b =>
                {
                    b.Navigation("BPAddresses");

                    b.Navigation("BPFiscalTaxIDCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
